# Source: zouzoublique-api/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-zouzoublique-api
  labels:
    helm.sh/chart: zouzoublique-api-0.1.0
    app.kubernetes.io/name: zouzoublique-api
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.0.1"
    app.kubernetes.io/managed-by: Helm
automountServiceAccountToken: true
---
# Source: zouzoublique-api/templates/postgres-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-zouzoublique-api-postgres-secret
  labels:
    helm.sh/chart: zouzoublique-api-0.1.0
    app.kubernetes.io/name: zouzoublique-api
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.0.1"
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  postgres-password: "em91em91YmxpcXVlX3Bhc3N3b3Jk"
---
# Source: zouzoublique-api/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-zouzoublique-api
data:
  config: |-
    [main]
    database_url = postgres://zouzoublique:zouzoublique_password@release-name-zouzoublique-api-postgres:5432/zouzoublique_db?sslmode=disable
    port = 3000
---
# Source: zouzoublique-api/templates/postgres-pvc.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: release-name-zouzoublique-api-postgres-pvc
  labels:
    helm.sh/chart: zouzoublique-api-0.1.0
    app.kubernetes.io/name: zouzoublique-api
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.0.1"
    app.kubernetes.io/managed-by: Helm
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 8Gi
---
# Source: zouzoublique-api/templates/postgres-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-zouzoublique-api-postgres
  labels:
    helm.sh/chart: zouzoublique-api-0.1.0
    app.kubernetes.io/name: zouzoublique-api
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.0.1"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: postgres
spec:
  type: ClusterIP
  ports:
    - port: 5432
      targetPort: postgres
      protocol: TCP
      name: postgres
  selector:
    app.kubernetes.io/name: zouzoublique-api
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: postgres
---
# Source: zouzoublique-api/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-zouzoublique-api
  labels:
    helm.sh/chart: zouzoublique-api-0.1.0
    app.kubernetes.io/name: zouzoublique-api
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.0.1"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 3000
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: zouzoublique-api
    app.kubernetes.io/instance: release-name
---
# Source: zouzoublique-api/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-zouzoublique-api
  labels:
    helm.sh/chart: zouzoublique-api-0.1.0
    app.kubernetes.io/name: zouzoublique-api
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.0.1"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: zouzoublique-api
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        helm.sh/chart: zouzoublique-api-0.1.0
        app.kubernetes.io/name: zouzoublique-api
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/version: "0.0.1"
        app.kubernetes.io/managed-by: Helm
    spec:
      serviceAccountName: release-name-zouzoublique-api
      containers:
        - name: zouzoublique-api
          securityContext:
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1000
          image: "zouzoublique-api:v1"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz
              port: http
          readinessProbe:
            httpGet:
              path: /healthz
              port: http
          volumeMounts:
            - mountPath: /etc/zouzoublique-api/config.ini
              name: config-mount
              subPath: config
      volumes:
        - configMap:
            name: 'release-name-zouzoublique-api'
          name: config-mount
---
# Source: zouzoublique-api/templates/postgres-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-zouzoublique-api-postgres
  labels:
    helm.sh/chart: zouzoublique-api-0.1.0
    app.kubernetes.io/name: zouzoublique-api
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.0.1"
    app.kubernetes.io/managed-by: Helm
    # Add a component label for easy selection
    app.kubernetes.io/component: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: zouzoublique-api
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: postgres
  template:
    metadata:
      labels:
        app.kubernetes.io/name: zouzoublique-api
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/component: postgres
    spec:
      containers:
        - name: postgres
          image: "postgres:14.9-alpine"
          imagePullPolicy: IfNotPresent
          env:
            - name: POSTGRES_USER
              value: "zouzoublique"
            - name: POSTGRES_DB
              value: "zouzoublique_db"
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: release-name-zouzoublique-api-postgres-secret
                  key: postgres-password
          ports:
            - name: postgres
              containerPort: 5432
              protocol: TCP
          volumeMounts:
            - name: postgres-data
              mountPath: /var/lib/postgresql/data
      volumes:
        - name: postgres-data
          persistentVolumeClaim:
            claimName: release-name-zouzoublique-api-postgres-pvc
---
# Source: zouzoublique-api/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: release-name-zouzoublique-api
  labels:
    helm.sh/chart: zouzoublique-api-0.1.0
    app.kubernetes.io/name: zouzoublique-api
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.0.1"
    app.kubernetes.io/managed-by: Helm
  annotations:
    kubernetes.io/ingress.class: nginx
    kubernetes.io/tls-acme: "true"
spec:
  tls:
    - hosts:
        - "api.zouzoublique.site.ru"
      secretName: zouzoublique-api-tls
  rules:
    - host: "api.zouzoublique.site.ru"
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: release-name-zouzoublique-api
                port:
                  number: 3000
